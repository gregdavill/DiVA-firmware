name: build-SoC

on:
  push:


jobs:
  # Main build, creates firmware update image
  build-soc:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: false # Note: not Recursive (Causes error with serv)

    - name: submodule init
      run: git submodule init

    - name: configure fpga-toolchain
      run: |
        export VERSION=nightly-20201020
        wget https://github.com/open-tool-forge/fpga-toolchain/releases/download/$VERSION/fpga-toolchain-linux_x86_64-$VERSION.tar.xz
        tar -xf fpga-toolchain-linux_x86_64-$VERSION.tar.xz
        rm -rf fpga-toolchain-linux_x86_64-$VERSION.tar.xz
        echo "$(pwd)/fpga-toolchain/bin" >> $GITHUB_PATH

    - name: configure riscv-toolchain
      run: |
        wget https://static.dev.sifive.com/dev-tools/riscv64-unknown-elf-gcc-8.3.0-2019.08.0-x86_64-linux-ubuntu14.tar.gz
        tar -xzf riscv64-unknown-elf-gcc-8.3.0-2019.08.0-x86_64-linux-ubuntu14.tar.gz
        rm -rf riscv64-unknown-elf-gcc-8.3.0-2019.08.0-x86_64-linux-ubuntu14.tar.gz
        echo "$(pwd)/riscv64-unknown-elf-gcc-8.3.0-2019.08.0-x86_64-linux-ubuntu14/bin" >> $GITHUB_PATH

    - name: configure python
      run: |
        python3 -m pip install setuptools
        python3 -m pip install pycrc
        python3 -m pip install Pillow 
        python3 -m pip install wheel
        python3 -m pip install Sphinx 
        python3 -m pip install sphinxcontrib-wavedrom 


    - name: Litex build
      working-directory: ./gateware
      run: |
        python3 DiVA-Bitstream.py

    - name: Upload build
      uses: actions/upload-artifact@v2
      with:
        name: DiVA build Folder
        path: ${{ github.workspace }}/gateware/build

    - name: Upload dfu update file
      uses: actions/upload-artifact@v2
      with:
        name: DiVA firmware update
        path: ${{ github.workspace }}/gateware/build/gateware/DiVA.dfu
  
  # Software build, create windows app to perform the dfu update
  build-sw:
    runs-on: windows-latest
    needs: build-soc
    steps:
    - uses: actions/checkout@master

    - name: Download DFU Binary
      uses: actions/download-artifact@v2
      with:
        name: DiVA firmware update

    - shell: bash
      run: mv DiVA.dfu software/fw-updater/Resources/DiVA.dfu

    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2

    - name: MSBuild
      working-directory: software/fw-updater
      run: msbuild fw-updater.csproj /p:Configuration=Release

    - name: Upload Updater
      uses: actions/upload-artifact@v2
      with:
        name: Windows update tool
        path: software/fw-updater/bin/Release/fw-updater.exe
  
  release:
    name: Create Release
    needs: build-sw
    if: ${{ contains( github.ref, 'refs/tags/') }}
    runs-on: ubuntu-latest
    steps:
      #- name: Checkout code
      #  uses: actions/checkout@v2
      - name: Download DFU Binary
        uses: actions/download-artifact@v2
        with:
          name: DiVA firmware update

      - name: Download DFU Binary
        uses: actions/download-artifact@v2
        with:
          name: Windows update tool

      - name: Create Release
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Changes in this Release
            - First Change
            - Second Change
          draft: true
          prerelease: false
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./DiVA.dfu
          asset_name: DiVA.dfu
          asset_content_type: application/octet-stream

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: ./fw-updater.exe
          asset_name: fw-updater.exe
          asset_content_type: application/octet-stream
